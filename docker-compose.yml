version: '3.8'

services:
  postgres:
    image: postgres:13
    environment:
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
      - POSTGRES_DB=${POSTGRES_DB}
    volumes:
      - postgres_data:/var/lib/postgresql/data
    ports:
      - "5432:5432"
    networks:
      - rag_network

  redis:
    image: redis:6.2-alpine
    ports:
      - "6379:6379"
    networks:
      - rag_network
      
  qdrant:
    image: qdrant/qdrant:latest
    ports:
      - "6333:6333"
      - "6334:6334"
    volumes:
      - qdrant_data:/qdrant/storage
    networks:
      - rag_network

  minio:
    image: minio/minio:latest
    ports:
      - "9000:9000" # API Port
      - "9001:9001" # Console Port
    volumes:
      - minio_data:/data
    environment:
      - MINIO_ROOT_USER=${MINIO_ROOT_USER}
      - MINIO_ROOT_PASSWORD=${MINIO_ROOT_PASSWORD}
    command: server /data --console-address ":9001"
    networks:
      - rag_network

  fastapi_app:
    build: ./fastapi_app
    ports:
      - "8000:8000"
    env_file:
      - .env
    environment:
      - OPENAI_API_KEY=${OPENAI_API_KEY}
    depends_on:
      - postgres
      - redis
    networks:
      - rag_network

  # --- Airflow Services ---
  airflow-init:
    build:
      context: ./Airflow
      dockerfile: Dockerfile
    env_file:
      - .env
    environment:
      - AIRFLOW__CORE__EXECUTOR=LocalExecutor
      - AIRFLOW__DATABASE__SQL_ALCHEMY_CONN=postgresql+psycopg2://${POSTGRES_USER}:${POSTGRES_PASSWORD}@postgres/${POSTGRES_DB}
      - AIRFLOW__CORE__FERNET_KEY=
      - AIRFLOW__CORE__LOAD_EXAMPLES=False
      - AIRFLOW__CORE__DAGS_ARE_PAUSED_AT_CREATION=True
    entrypoint: /bin/bash
    command:
      - -c
      - |
        airflow db init && \
        airflow users create --username admin --password admin --firstname Admin --lastname User --role Admin --email admin@example.com && \
        airflow connections add 'minio_conn' --conn-type 's3' --conn-login '${MINIO_ROOT_USER}' --conn-password '${MINIO_ROOT_PASSWORD}' --conn-host 'minio' --conn-port 9000 --conn-extra '{"aws_session_token": null, "host": "http://minio:9000"}'
    networks:
      - rag_network
    depends_on:
      - postgres

  airflow-webserver:
    build:
      context: ./Airflow
      dockerfile: Dockerfile
    restart: always
    env_file:
      - .env
    environment:
      - AIRFLOW__CORE__EXECUTOR=LocalExecutor
      - AIRFLOW__DATABASE__SQL_ALCHEMY_CONN=postgresql+psycopg2://${POSTGRES_USER}:${POSTGRES_PASSWORD}@postgres/${POSTGRES_DB}
      - AIRFLOW__CORE__FERNET_KEY=
      - AIRFLOW__CORE__LOAD_EXAMPLES=False
    ports:
      - "8080:8080"
    command: webserver
    networks:
      - rag_network
    depends_on:
      - airflow-init

  airflow-scheduler:
    build:
      context: ./Airflow
      dockerfile: Dockerfile
    restart: always
    env_file:
      - .env
    environment:
      - AIRFLOW__CORE__EXECUTOR=LocalExecutor
      - AIRFLOW__DATABASE__SQL_ALCHEMY_CONN=postgresql+psycopg2://${POSTGRES_USER}:${POSTGRES_PASSWORD}@postgres/${POSTGRES_DB}
      - AIRFLOW__CORE__FERNET_KEY=
      - AIRFLOW__CORE__LOAD_EXAMPLES=False
    command: scheduler
    networks:
      - rag_network
    depends_on:
      - airflow-init

  streamlit_app:
    build:
      context: ./App
      dockerfile: Dockerfile.streamlit
    ports:
      - "8501:8501"
    environment:
      FASTAPI_URL: http://fastapi_app:8000
    volumes:
      - ./App:/app
    depends_on:
      - fastapi_app
      - redis
      - postgres
    networks:
      - rag_network

volumes:
  postgres_data:
  minio_data:
  qdrant_data:

networks:
  rag_network:
    driver: bridge
